Table "alembic_version" {
  "version_num" varchar(32) [pk, not null]
}

Table "entity_types" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "code" varchar [unique, not null]
  "name" varchar [not null]
  "description" text
  "requires_cpf" bool
  "requires_cnpj" bool
  "requires_special_id" bool
  "active" bool
  "created_at" timestamptz [default: `now()`]
}

Table "entities" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "entity_code" varchar [unique, not null]
  "entity_type_id" uuid
  "legal_id_number" varchar [unique]
  "global_key_hash" varchar
  "display_name" varchar [not null]
  "email" varchar
  "phone" varchar
  "profile_picture_url" text
  "metadata" jsonb
  "active" bool
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    entity_code [type: btree, name: "idx_entities_entity_code"]
    legal_id_number [type: btree, name: "idx_entities_legal_id_number"]
  }
}

Table "brands" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar [not null]
  "country_of_origin" varchar
  "logo_url" text
  "active" bool
  "created_at" timestamptz [default: `now()`]
}

Table "models" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "brand_id" uuid
  "name" varchar [not null]
  "category" varchar
  "active" bool
  "created_at" timestamptz [default: `now()`]
}

Table "model_versions" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "model_id" uuid
  "name" varchar [not null]
  "start_year" int4
  "end_year" int4
  "fuel_type" varchar
  "transmission" varchar
  "drive_type" varchar
  "engine_displacement" numeric
  "engine_power" int4
  "doors" int4
  "seats" int4
  "weight_kg" int4
  "tank_capacity_liters" int4
  "trunk_capacity_liters" int4
  "active" bool
  "created_at" timestamptz [default: `now()`]
}

Table "vehicles" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "vin" varchar [unique]
  "renavam" varchar [unique]
  "brand_id" uuid
  "model_id" uuid
  "version_id" uuid
  "custom_brand" varchar
  "custom_model" varchar
  "custom_version" varchar
  "manufacturing_year" int4
  "model_year" int4
  "current_color" varchar
  "current_plate" varchar
  "current_km" int4
  "visibility" varchar
  "observations" text
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    current_plate [type: btree, name: "idx_vehicles_current_plate"]
    renavam [type: btree, name: "idx_vehicles_renavam"]
    vin [type: btree, name: "idx_vehicles_vin"]
  }
}

Table "link_types" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "code" varchar [unique, not null]
  "name" varchar [not null]
  "description" text
  "permissions" jsonb
  "active" bool
  "created_at" timestamptz [default: `now()`]
}

Table "links" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "link_code" varchar [unique, not null]
  "entity_id" uuid
  "vehicle_id" uuid
  "link_type_id" uuid
  "own_key_hash" varchar
  "uses_own_key" bool
  "status" varchar
  "document_proof" text
  "validated_at" timestamptz
  "validated_by" uuid
  "start_date" date
  "end_date" date
  "observations" text
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    (entity_id, vehicle_id) [type: btree, name: "idx_links_entity_vehicle"]
    link_code [type: btree, name: "idx_links_link_code"]
    status [type: btree, name: "idx_links_status"]
  }
}

Table "link_status" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "link_id" uuid
  "from_status" varchar
  "to_status" varchar [not null]
  "changed_by_entity_id" uuid
  "changed_by_link_id" uuid
  "reason" text
  "metadata" jsonb
  "created_at" timestamptz [default: `now()`]
}

Table "vehicle_claims" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "vehicle_id" uuid
  "link_id" uuid
  "claim_type" varchar
  "severity" varchar
  "claim_date" timestamptz
  "claim_km" int4
  "location_lat" numeric
  "location_lng" numeric
  "address" text
  "police_report" varchar
  "police_report_url" text
  "insurance_company" varchar
  "claim_number" varchar
  "policy" varchar
  "insurance_status" varchar
  "indemnity_value" numeric
  "tow_truck_called" bool
  "tow_truck_company" varchar
  "involved_third_parties" jsonb
  "description" text
  "photos_urls" text
  "total_repair_cost" numeric
  "status" varchar
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]
}

Table "fuel_types" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "code" varchar [unique, not null]
  "name" varchar [not null]
  "description" text
  "unit" varchar
  "hex_color" varchar
  "icon" varchar
  "active" bool
  "created_at" timestamptz [default: `now()`]
}

Table "flags" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "code" varchar [unique, not null]
  "name" varchar [not null]
  "logo_url" text
  "country_of_origin" varchar
  "website" varchar
  "active" bool
  "created_at" timestamptz [default: `now()`]
}

Table "fuel_stations" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar [not null]
  "cnpj" varchar
  "location_lat" numeric
  "location_lng" numeric
  "address" text
  "city" varchar
  "state" varchar
  "postal_code" varchar
  "country" varchar
  "phone" varchar
  "email" varchar
  "website" varchar
  "active" bool
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]
}

Table "fuel_station_flags" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "station_id" uuid
  "flag_id" uuid
  "start_date" date
  "end_date" date
  "observations" text
  "registered_by_entity_id" uuid
  "created_at" timestamptz [default: `now()`]
}

Table "station_fuels" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "station_id" uuid
  "fuel_type_id" uuid
  "start_date" date
  "end_date" date
  "status" varchar
  "observations" text
  "registered_by_entity_id" uuid
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]
}

Table "station_fuel_prices" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "station_fuel_id" uuid
  "price" numeric [not null]
  "effective_date" date [not null]
  "end_date" date
  "is_promotion" bool
  "promotion_description" text
  "reported_by_entity_id" uuid
  "verified" bool
  "verified_at" timestamptz
  "verified_by_entity_id" uuid
  "created_at" timestamptz [default: `now()`]
}

Table "fuel_station_hours" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "station_id" uuid
  "day_of_week" int4
  "opens_at" time
  "closes_at" time
  "is_24_hours" bool
  "is_closed" bool
  "start_date" date
  "end_date" date
  "observations" text
  "registered_by_entity_id" uuid
  "created_at" timestamptz [default: `now()`]
}

Table "fuel_station_operating_periods" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "station_id" uuid
  "date" date [not null]
  "first_activity_at" timestamptz
  "last_activity_at" timestamptz
  "total_refuels" int4
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]
}

Table "vehicle_refuels" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "vehicle_id" uuid
  "link_id" uuid
  "station_fuel_id" uuid
  "fuel_type_id" uuid
  "station_id" uuid
  "refuel_date" timestamptz [not null]
  "refuel_km" int4
  "quantity" numeric [not null]
  "unit_price" numeric
  "total_price" numeric
  "full_tank" bool
  "invoice_url" text
  "observations" text
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]
  "registered_by_entity_id" uuid [not null]

  Indexes {
    refuel_date [type: btree, name: "idx_vehicle_refuels_date"]
    vehicle_id [type: btree, name: "idx_vehicle_refuels_vehicle"]
  }
}

Table "odometers" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "vehicle_id" uuid
  "installation_date" timestamptz
  "removal_date" timestamptz
  "brand" varchar
  "model" varchar
  "part_number" varchar
  "cost" numeric
  "supplier" varchar
  "invoice_url" text
  "warranty_months" int4
  "warranty_km" int4
  "reason_for_change" text
  "damage_type" varchar
  "observations" text
  "registered_by_link_id" uuid
  "created_at" timestamptz [default: `now()`]
}

Table "mileage_records" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "odometer_id" uuid
  "vehicle_id" uuid
  "recorded_at" timestamptz [not null]
  "mileage" int4 [not null]
  "registered_by_link_id" uuid
  "created_at" timestamptz [default: `now()`]

  Indexes {
    recorded_at [type: btree, name: "idx_mileage_records_date"]
    vehicle_id [type: btree, name: "idx_mileage_records_vehicle"]
  }
}

Table "conversation_contexts" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "code" varchar [unique, not null]
  "category" varchar
  "name" varchar [not null]
  "description" text
  "keywords" jsonb
  "available_actions" jsonb
  "ai_instructions" text
  "requires_link" bool
  "required_permissions" jsonb
  "active" bool
  "created_at" timestamptz [default: `now()`]
}

Table "conversations" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "conversation_code" varchar [unique, not null]
  "primary_vehicle_id" uuid
  "vehicle_ids" text
  "conversation_type" varchar
  "title" varchar
  "summary" text
  "status" varchar
  "main_context_id" uuid
  "total_participants" int4
  "active_participants" int4
  "total_messages" int4
  "total_actions_executed" int4
  "started_at" timestamptz
  "last_message_at" timestamptz
  "finished_at" timestamptz
  "archived_at" timestamptz
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    conversation_code [type: btree, name: "idx_conversations_code"]
    status [type: btree, name: "idx_conversations_status"]
  }
}

Table "conversation_participants" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "conversation_id" uuid
  "entity_id" uuid
  "link_id" uuid
  "role" varchar
  "participant_type" varchar
  "joined_at" timestamptz
  "left_at" timestamptz
  "is_active" bool
  "invited_by_entity_id" uuid
  "invited_by_participant_id" uuid
  "invitation_reason" varchar
  "removed_by_entity_id" uuid
  "removal_reason" varchar
  "permissions" jsonb
  "context_summary_at_join" text
  "auto_leave_config" jsonb
  "notification_enabled" bool
  "last_read_message_id" uuid
  "last_read_at" timestamptz
  "unread_count" int4
  "metadata" jsonb
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]
}

Table "action_types" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "code" varchar [unique, not null]
  "category" varchar
  "name" varchar [not null]
  "description" text
  "icon" varchar
  "color" varchar
  "requires_execution" bool
  "affects_database" bool
  "affects_physical_vehicle" bool
  "input_schema" jsonb
  "output_schema" jsonb
  "required_permissions" jsonb
  "active" bool
  "created_at" timestamptz [default: `now()`]
}

Table "actions" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "vehicle_id" uuid
  "action_type_id" uuid
  "created_by_entity_id" uuid
  "created_by_link_id" uuid
  "assigned_to_entity_id" uuid
  "executed_by_entity_id" uuid
  "executed_by_link_id" uuid
  "source_type" varchar
  "source_id" uuid
  "conversation_id" uuid
  "parent_action_id" uuid
  "title" varchar
  "description" text
  "input_data" jsonb
  "output_data" jsonb
  "metadata" jsonb
  "status" varchar
  "priority" int4
  "scheduled_for" timestamptz
  "schedule_type" varchar
  "recurrence_rule" text
  "execution_order" int4
  "depends_on_action_id" uuid
  "batch_id" uuid
  "is_atomic" bool
  "started_at" timestamptz
  "executed_at" timestamptz
  "cancelled_at" timestamptz
  "error_message" text
  "retry_count" int4
  "max_retries" int4
  "affected_entities" jsonb
  "rollback_data" jsonb
  "requires_confirmation" bool
  "confirmed_by_entity_id" uuid
  "confirmed_at" timestamptz
  "location_lat" numeric
  "location_lng" numeric
  "address" text
  "estimated_cost" numeric
  "actual_cost" numeric
  "currency" varchar
  "attachments_urls" text
  "external_references" jsonb
  "expires_at" timestamptz
  "alert_before_hours" int4
  "alerted_at" timestamptz
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    conversation_id [type: btree, name: "idx_actions_conversation"]
    status [type: btree, name: "idx_actions_status"]
    vehicle_id [type: btree, name: "idx_actions_vehicle"]
  }
}

Table "action_status" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "action_id" uuid
  "from_status" varchar
  "to_status" varchar [not null]
  "changed_by_entity_id" uuid
  "reason" text
  "metadata" jsonb
  "created_at" timestamptz [default: `now()`]
}

Table "action_notes" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "action_id" uuid
  "entity_id" uuid
  "note_type" varchar
  "content" text [not null]
  "attachments_urls" text
  "is_internal" bool
  "created_at" timestamptz [default: `now()`]
}

Table "conversation_messages" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "conversation_id" uuid
  "sender_entity_id" uuid
  "sender_participant_id" uuid
  "directed_to_entity_id" uuid
  "directed_to_participant_id" uuid
  "content" text [not null]
  "message_type" varchar
  "context_id" uuid
  "context_confidence" numeric
  "detected_intent" varchar
  "extracted_entities" jsonb
  "action_id" uuid
  "action_executed" bool
  "action_result" jsonb
  "requires_confirmation" bool
  "confirmed" bool
  "confirmed_at" timestamptz
  "confirmed_by_entity_id" uuid
  "attachments_urls" text
  "visible_to_participant_ids" text
  "is_private" bool
  "requires_user_interaction" bool
  "interaction_reason" varchar
  "auto_processed" bool
  "processed" bool
  "processed_at" timestamptz
  "reactions" jsonb
  "created_at" timestamptz [default: `now()`]

  Indexes {
    conversation_id [type: btree, name: "idx_conversation_messages_conversation"]
  }
}

Table "plate_types" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "code" varchar [unique, not null]
  "name" varchar [not null]
  "description" text
  "country" varchar [not null]
  "format_pattern" varchar
  "format_example" varchar
  "active" bool
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    active [type: btree, name: "idx_plate_types_active"]
    code [type: btree, name: "idx_plate_types_code"]
    country [type: btree, name: "idx_plate_types_country"]
  }
}

Table "plates" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "vehicle_id" uuid [not null]
  "plate_type_id" uuid [not null]
  "plate_number" varchar [not null]
  "licensing_date" date
  "licensing_country" varchar
  "state" varchar
  "city" varchar
  "status" varchar
  "end_date" date
  "created_by_entity_id" uuid
  "active" bool
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    active [type: btree, name: "idx_plates_active"]
    licensing_date [type: btree, name: "idx_plates_licensing_date"]
    plate_number [type: btree, name: "idx_plates_plate_number"]
    status [type: btree, name: "idx_plates_status"]
    vehicle_id [type: btree, name: "idx_plates_vehicle_id"]
  }
}

Table "colors" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "vehicle_id" uuid [not null]
  "color" varchar [not null]
  "hex_code" varchar
  "start_date" date
  "end_date" date
  "created_by_entity_id" uuid
  "active" bool
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]
  "description" text

  Indexes {
    active [type: btree, name: "idx_colors_active"]
    color [type: btree, name: "idx_colors_color"]
    start_date [type: btree, name: "idx_colors_start_date"]
    vehicle_id [type: btree, name: "idx_colors_vehicle_id"]
  }
}

Table "files" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "vehicle_id" uuid
  "uploaded_by_entity_id" uuid [not null]
  "file_url" text [not null]
  "file_name" varchar
  "file_type" varchar
  "mime_type" varchar
  "file_size_bytes" int8
  "width" int4
  "height" int4
  "duration_seconds" int4
  "source" varchar
  "status" varchar
  "uploaded_at" timestamptz [default: `now()`]
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    status [type: btree, name: "idx_files_status"]
    uploaded_by_entity_id [type: btree, name: "idx_files_uploaded_by_entity_id"]
    vehicle_id [type: btree, name: "idx_files_vehicle_id"]
    (vehicle_id, status) [type: btree, name: "idx_files_vehicle_status"]
  }
}

Table "vehicle_covers" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "vehicle_id" uuid [not null]
  "file_id" uuid [not null]
  "is_primary" bool
  "display_order" int4
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    file_id [type: btree, name: "idx_vehicle_covers_file_id"]
    is_primary [type: btree, name: "idx_vehicle_covers_is_primary"]
    vehicle_id [type: btree, name: "idx_vehicle_covers_vehicle_id"]
    (vehicle_id, is_primary) [type: btree, name: "idx_vehicle_covers_vehicle_primary"]
  }
}

Table "entity_documents" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "entity_id" uuid [not null]
  "file_id" uuid [not null]
  "document_type" varchar
  "document_number" varchar
  "issue_date" date
  "expiry_date" date
  "issuing_authority" varchar
  "is_verified" bool
  "verified_at" timestamptz
  "verified_by_entity_id" uuid
  "is_current" bool
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    document_type [type: btree, name: "idx_entity_documents_document_type"]
    entity_id [type: btree, name: "idx_entity_documents_entity_id"]
    (entity_id, document_type) [type: btree, name: "idx_entity_documents_entity_type"]
    file_id [type: btree, name: "idx_entity_documents_file_id"]
    is_current [type: btree, name: "idx_entity_documents_is_current"]
  }
}

Table "moments" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "created_by_entity_id" uuid [not null]
  "status" varchar
  "visibility" varchar
  "location_lat" numeric(10,7)
  "location_lng" numeric(10,7)
  "location_name" varchar
  "recorded_at" timestamptz
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    created_at [type: btree, name: "idx_moments_created_at"]
    created_by_entity_id [type: btree, name: "idx_moments_created_by_entity_id"]
    status [type: btree, name: "idx_moments_status"]
    visibility [type: btree, name: "idx_moments_visibility"]
  }
}

Table "moment_contents" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "moment_id" uuid [not null]
  "file_id" uuid [not null]
  "display_order" int4
  "is_cover" bool
  "created_at" timestamptz [default: `now()`]

  Indexes {
    (moment_id, display_order) [type: btree, name: "idx_moment_contents_display_order"]
    file_id [type: btree, name: "idx_moment_contents_file_id"]
    moment_id [type: btree, name: "idx_moment_contents_moment_id"]
  }
}

Table "moment_vehicles" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "moment_id" uuid [not null]
  "vehicle_id" uuid [not null]
  "tagged_by_entity_id" uuid
  "created_at" timestamptz [default: `now()`]

  Indexes {
    moment_id [type: btree, name: "idx_moment_vehicles_moment_id"]
    vehicle_id [type: btree, name: "idx_moment_vehicles_vehicle_id"]
  }
}

Table "moment_descriptions" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "moment_id" uuid [not null]
  "description" text [not null]
  "edited_by_entity_id" uuid [not null]
  "is_current" bool
  "edit_reason" varchar
  "created_at" timestamptz [default: `now()`]

  Indexes {
    (moment_id, is_current) [type: btree, name: "idx_moment_descriptions_is_current"]
    moment_id [type: btree, name: "idx_moment_descriptions_moment_id"]
  }
}

Table "moment_reactions" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "moment_id" uuid [not null]
  "parent_reaction_id" uuid
  "created_by_entity_id" uuid [not null]
  "reaction_emoji" varchar
  "comment" text
  "is_edited" bool
  "is_deleted" bool
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    created_at [type: btree, name: "idx_moment_reactions_created_at"]
    created_by_entity_id [type: btree, name: "idx_moment_reactions_created_by"]
    (moment_id, created_at) [type: btree, name: "idx_moment_reactions_moment_created"]
    moment_id [type: btree, name: "idx_moment_reactions_moment_id"]
    parent_reaction_id [type: btree, name: "idx_moment_reactions_parent_id"]
    (parent_reaction_id, created_at) [type: btree, name: "idx_moment_reactions_thread"]
  }
}

Table "entity_relationships" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "entity_id" uuid [not null]
  "parent_entity_id" uuid [not null]
  "relationship_type" varchar [not null]
  "start_date" date [not null, default: `CURRENT_DATE`]
  "end_date" date
  "is_active" bool
  "reason" text
  "observations" text
  "created_by_entity_id" uuid
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    entity_id [type: btree, name: "idx_entity_relationships_entity"]
    (entity_id, is_active) [type: btree, name: "idx_entity_relationships_entity_active"]
    (entity_id, parent_entity_id, is_active) [type: btree, name: "idx_entity_relationships_pair"]
    parent_entity_id [type: btree, name: "idx_entity_relationships_parent"]
    (parent_entity_id, is_active) [type: btree, name: "idx_entity_relationships_parent_active"]
    relationship_type [type: btree, name: "idx_entity_relationships_type"]
  }
}

Table "entity_names" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "entity_id" uuid [not null]
  "name_type" varchar [not null]
  "name_value" varchar [not null]
  "is_current" bool
  "start_date" date [not null, default: `CURRENT_DATE`]
  "end_date" date
  "reason" varchar
  "changed_by_entity_id" uuid
  "observations" text
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    entity_id [type: btree, name: "idx_entity_names_entity"]
    (entity_id, is_current) [type: btree, name: "idx_entity_names_entity_current"]
    (entity_id, name_type, is_current) [type: btree, name: "idx_entity_names_type_current"]
    name_value [type: btree, name: "idx_entity_names_value"]
  }
}

Table "entity_identifications" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "entity_id" uuid [not null]
  "identification_type" varchar [not null]
  "identification_number" varchar [not null]
  "issuing_country" varchar
  "issuing_state" varchar
  "issuing_authority" varchar
  "issue_date" date
  "expiry_date" date
  "is_verified" bool
  "verified_at" timestamptz
  "verified_by_entity_id" uuid
  "is_primary" bool
  "is_active" bool
  "start_date" date [not null, default: `CURRENT_DATE`]
  "end_date" date
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    entity_id [type: btree, name: "idx_entity_identifications_entity"]
    identification_number [type: btree, name: "idx_entity_identifications_number"]
    (entity_id, is_primary, is_active) [type: btree, name: "idx_entity_identifications_primary"]
    (identification_type, identification_number) [type: btree, name: "idx_entity_identifications_type_number"]
  }
}

Table "entity_contacts" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "entity_id" uuid [not null]
  "contact_type" varchar [not null]
  "contact_value" varchar [not null]
  "is_verified" bool
  "verified_at" timestamptz
  "is_primary" bool
  "is_public" bool
  "use_for_login" bool
  "use_for_recovery" bool
  "use_for_notifications" bool
  "use_for_2fa" bool
  "label" varchar
  "is_active" bool
  "start_date" date [not null, default: `CURRENT_DATE`]
  "end_date" date
  "created_at" timestamptz [default: `now()`]
  "updated_at" timestamptz [default: `now()`]

  Indexes {
    entity_id [type: btree, name: "idx_entity_contacts_entity"]
    (entity_id, contact_type) [type: btree, name: "idx_entity_contacts_entity_type"]
    (entity_id, use_for_login, is_verified) [type: btree, name: "idx_entity_contacts_login"]
    (entity_id, is_primary) [type: btree, name: "idx_entity_contacts_primary"]
    (entity_id, use_for_recovery, is_verified) [type: btree, name: "idx_entity_contacts_recovery"]
    contact_value [type: btree, name: "idx_entity_contacts_value"]
  }
}

Table "entity_credentials" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "entity_id" uuid [not null]
  "credential_type" varchar [not null]
  "credential_hash" text [not null]
  "hash_algorithm" varchar [not null]
  "salt" varchar
  "iterations" int4
  "is_current" bool
  "is_compromised" bool
  "compromised_at" timestamptz
  "compromised_reason" text
  "expires_at" timestamptz
  "last_used_at" timestamptz
  "failed_attempts" int4
  "locked_until" timestamptz
  "created_by_entity_id" uuid
  "creation_method" varchar
  "creation_ip" varchar
  "replaced_credential_id" uuid
  "metadata" jsonb
  "created_at" timestamptz [default: `now()`]

  Indexes {
    (entity_id, is_current, credential_type) [type: btree, name: "idx_entity_credentials_current"]
    entity_id [type: btree, name: "idx_entity_credentials_entity"]
    expires_at [type: btree, name: "idx_entity_credentials_expires"]
    (entity_id, credential_type) [type: btree, name: "idx_entity_credentials_type"]
  }
}

Table "entity_credential_attempts" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "entity_id" uuid [not null]
  "credential_id" uuid
  "attempt_type" varchar [not null]
  "success" bool [not null]
  "failure_reason" varchar
  "ip_address" varchar
  "user_agent" text
  "device_fingerprint" varchar
  "metadata" jsonb
  "created_at" timestamptz [default: `now()`]

  Indexes {
    credential_id [type: btree, name: "idx_credential_attempts_credential"]
    created_at [type: btree, name: "idx_credential_attempts_date"]
    entity_id [type: btree, name: "idx_credential_attempts_entity"]
    (entity_id, created_at) [type: btree, name: "idx_credential_attempts_entity_date"]
    success [type: btree, name: "idx_credential_attempts_success"]
  }
}

Ref "action_notes_action_id_fkey":"actions"."id" < "action_notes"."action_id"

Ref "action_notes_entity_id_fkey":"entities"."id" < "action_notes"."entity_id"

Ref "action_status_action_id_fkey":"actions"."id" < "action_status"."action_id"

Ref "action_status_changed_by_entity_id_fkey":"entities"."id" < "action_status"."changed_by_entity_id"

Ref "actions_action_type_id_fkey":"action_types"."id" < "actions"."action_type_id"

Ref "actions_assigned_to_entity_id_fkey":"entities"."id" < "actions"."assigned_to_entity_id"

Ref "actions_confirmed_by_entity_id_fkey":"entities"."id" < "actions"."confirmed_by_entity_id"

Ref "actions_conversation_id_fkey":"conversations"."id" < "actions"."conversation_id"

Ref "actions_created_by_entity_id_fkey":"entities"."id" < "actions"."created_by_entity_id"

Ref "actions_created_by_link_id_fkey":"links"."id" < "actions"."created_by_link_id"

Ref "actions_depends_on_action_id_fkey":"actions"."id" < "actions"."depends_on_action_id"

Ref "actions_executed_by_entity_id_fkey":"entities"."id" < "actions"."executed_by_entity_id"

Ref "actions_executed_by_link_id_fkey":"links"."id" < "actions"."executed_by_link_id"

Ref "actions_parent_action_id_fkey":"actions"."id" < "actions"."parent_action_id"

Ref "actions_vehicle_id_fkey":"vehicles"."id" < "actions"."vehicle_id"

Ref "colors_created_by_entity_id_fkey":"entities"."id" < "colors"."created_by_entity_id"

Ref "colors_vehicle_id_fkey":"vehicles"."id" < "colors"."vehicle_id" [delete: cascade]

Ref "conversation_messages_action_id_fkey":"actions"."id" < "conversation_messages"."action_id"

Ref "conversation_messages_confirmed_by_entity_id_fkey":"entities"."id" < "conversation_messages"."confirmed_by_entity_id"

Ref "conversation_messages_context_id_fkey":"conversation_contexts"."id" < "conversation_messages"."context_id"

Ref "conversation_messages_conversation_id_fkey":"conversations"."id" < "conversation_messages"."conversation_id"

Ref "conversation_messages_directed_to_entity_id_fkey":"entities"."id" < "conversation_messages"."directed_to_entity_id"

Ref "conversation_messages_directed_to_participant_id_fkey":"conversation_participants"."id" < "conversation_messages"."directed_to_participant_id"

Ref "conversation_messages_sender_entity_id_fkey":"entities"."id" < "conversation_messages"."sender_entity_id"

Ref "conversation_messages_sender_participant_id_fkey":"conversation_participants"."id" < "conversation_messages"."sender_participant_id"

Ref "conversation_participants_conversation_id_fkey":"conversations"."id" < "conversation_participants"."conversation_id"

Ref "conversation_participants_entity_id_fkey":"entities"."id" < "conversation_participants"."entity_id"

Ref "conversation_participants_invited_by_entity_id_fkey":"entities"."id" < "conversation_participants"."invited_by_entity_id"

Ref "conversation_participants_invited_by_participant_id_fkey":"conversation_participants"."id" < "conversation_participants"."invited_by_participant_id"

Ref "conversation_participants_link_id_fkey":"links"."id" < "conversation_participants"."link_id"

Ref "conversation_participants_removed_by_entity_id_fkey":"entities"."id" < "conversation_participants"."removed_by_entity_id"

Ref "conversations_main_context_id_fkey":"conversation_contexts"."id" < "conversations"."main_context_id"

Ref "conversations_primary_vehicle_id_fkey":"vehicles"."id" < "conversations"."primary_vehicle_id"

Ref "entities_entity_type_id_fkey":"entity_types"."id" < "entities"."entity_type_id"

Ref "entity_contacts_entity_id_fkey":"entities"."id" < "entity_contacts"."entity_id" [delete: cascade]

Ref "entity_credential_attempts_credential_id_fkey":"entity_credentials"."id" < "entity_credential_attempts"."credential_id" [delete: set null]

Ref "entity_credential_attempts_entity_id_fkey":"entities"."id" < "entity_credential_attempts"."entity_id" [delete: cascade]

Ref "entity_credentials_created_by_entity_id_fkey":"entities"."id" < "entity_credentials"."created_by_entity_id"

Ref "entity_credentials_entity_id_fkey":"entities"."id" < "entity_credentials"."entity_id" [delete: cascade]

Ref "entity_credentials_replaced_credential_id_fkey":"entity_credentials"."id" < "entity_credentials"."replaced_credential_id" [delete: set null]

Ref "entity_documents_entity_id_fkey":"entities"."id" < "entity_documents"."entity_id" [delete: cascade]

Ref "entity_documents_file_id_fkey":"files"."id" < "entity_documents"."file_id" [delete: cascade]

Ref "entity_documents_verified_by_entity_id_fkey":"entities"."id" < "entity_documents"."verified_by_entity_id"

Ref "entity_identifications_entity_id_fkey":"entities"."id" < "entity_identifications"."entity_id" [delete: cascade]

Ref "entity_identifications_verified_by_entity_id_fkey":"entities"."id" < "entity_identifications"."verified_by_entity_id"

Ref "entity_names_changed_by_entity_id_fkey":"entities"."id" < "entity_names"."changed_by_entity_id"

Ref "entity_names_entity_id_fkey":"entities"."id" < "entity_names"."entity_id" [delete: cascade]

Ref "entity_relationships_created_by_entity_id_fkey":"entities"."id" < "entity_relationships"."created_by_entity_id"

Ref "entity_relationships_entity_id_fkey":"entities"."id" < "entity_relationships"."entity_id" [delete: cascade]

Ref "entity_relationships_parent_entity_id_fkey":"entities"."id" < "entity_relationships"."parent_entity_id" [delete: restrict]

Ref "files_uploaded_by_entity_id_fkey":"entities"."id" < "files"."uploaded_by_entity_id"

Ref "files_vehicle_id_fkey":"vehicles"."id" < "files"."vehicle_id" [delete: cascade]

Ref "fuel_station_flags_flag_id_fkey":"flags"."id" < "fuel_station_flags"."flag_id"

Ref "fuel_station_flags_registered_by_entity_id_fkey":"entities"."id" < "fuel_station_flags"."registered_by_entity_id"

Ref "fuel_station_flags_station_id_fkey":"fuel_stations"."id" < "fuel_station_flags"."station_id"

Ref "fuel_station_hours_registered_by_entity_id_fkey":"entities"."id" < "fuel_station_hours"."registered_by_entity_id"

Ref "fuel_station_hours_station_id_fkey":"fuel_stations"."id" < "fuel_station_hours"."station_id"

Ref "fuel_station_operating_periods_station_id_fkey":"fuel_stations"."id" < "fuel_station_operating_periods"."station_id"

Ref "link_status_changed_by_entity_id_fkey":"entities"."id" < "link_status"."changed_by_entity_id"

Ref "link_status_changed_by_link_id_fkey":"links"."id" < "link_status"."changed_by_link_id"

Ref "link_status_link_id_fkey":"links"."id" < "link_status"."link_id"

Ref "links_entity_id_fkey":"entities"."id" < "links"."entity_id"

Ref "links_link_type_id_fkey":"link_types"."id" < "links"."link_type_id"

Ref "links_validated_by_fkey":"links"."id" < "links"."validated_by"

Ref "links_vehicle_id_fkey":"vehicles"."id" < "links"."vehicle_id"

Ref "mileage_records_odometer_id_fkey":"odometers"."id" < "mileage_records"."odometer_id"

Ref "mileage_records_registered_by_link_id_fkey":"links"."id" < "mileage_records"."registered_by_link_id"

Ref "mileage_records_vehicle_id_fkey":"vehicles"."id" < "mileage_records"."vehicle_id"

Ref "model_versions_model_id_fkey":"models"."id" < "model_versions"."model_id"

Ref "models_brand_id_fkey":"brands"."id" < "models"."brand_id"

Ref "moment_contents_file_id_fkey":"files"."id" < "moment_contents"."file_id" [delete: cascade]

Ref "moment_contents_moment_id_fkey":"moments"."id" < "moment_contents"."moment_id" [delete: cascade]

Ref "moment_descriptions_edited_by_entity_id_fkey":"entities"."id" < "moment_descriptions"."edited_by_entity_id"

Ref "moment_descriptions_moment_id_fkey":"moments"."id" < "moment_descriptions"."moment_id" [delete: cascade]

Ref "moment_reactions_created_by_entity_id_fkey":"entities"."id" < "moment_reactions"."created_by_entity_id"

Ref "moment_reactions_moment_id_fkey":"moments"."id" < "moment_reactions"."moment_id" [delete: cascade]

Ref "moment_reactions_parent_reaction_id_fkey":"moment_reactions"."id" < "moment_reactions"."parent_reaction_id" [delete: cascade]

Ref "moment_vehicles_moment_id_fkey":"moments"."id" < "moment_vehicles"."moment_id" [delete: cascade]

Ref "moment_vehicles_tagged_by_entity_id_fkey":"entities"."id" < "moment_vehicles"."tagged_by_entity_id"

Ref "moment_vehicles_vehicle_id_fkey":"vehicles"."id" < "moment_vehicles"."vehicle_id" [delete: cascade]

Ref "moments_created_by_entity_id_fkey":"entities"."id" < "moments"."created_by_entity_id"

Ref "odometers_registered_by_link_id_fkey":"links"."id" < "odometers"."registered_by_link_id"

Ref "odometers_vehicle_id_fkey":"vehicles"."id" < "odometers"."vehicle_id"

Ref "plates_created_by_entity_id_fkey":"entities"."id" < "plates"."created_by_entity_id"

Ref "plates_plate_type_id_fkey":"plate_types"."id" < "plates"."plate_type_id"

Ref "plates_vehicle_id_fkey":"vehicles"."id" < "plates"."vehicle_id" [delete: cascade]

Ref "station_fuel_prices_reported_by_entity_id_fkey":"entities"."id" < "station_fuel_prices"."reported_by_entity_id"

Ref "station_fuel_prices_station_fuel_id_fkey":"station_fuels"."id" < "station_fuel_prices"."station_fuel_id"

Ref "station_fuel_prices_verified_by_entity_id_fkey":"entities"."id" < "station_fuel_prices"."verified_by_entity_id"

Ref "station_fuels_fuel_type_id_fkey":"fuel_types"."id" < "station_fuels"."fuel_type_id"

Ref "station_fuels_registered_by_entity_id_fkey":"entities"."id" < "station_fuels"."registered_by_entity_id"

Ref "station_fuels_station_id_fkey":"fuel_stations"."id" < "station_fuels"."station_id"

Ref "vehicle_claims_link_id_fkey":"links"."id" < "vehicle_claims"."link_id"

Ref "vehicle_claims_vehicle_id_fkey":"vehicles"."id" < "vehicle_claims"."vehicle_id"

Ref "vehicle_covers_file_id_fkey":"files"."id" < "vehicle_covers"."file_id" [delete: cascade]

Ref "vehicle_covers_vehicle_id_fkey":"vehicles"."id" < "vehicle_covers"."vehicle_id" [delete: cascade]

Ref "vehicle_refuels_fuel_type_id_fkey":"fuel_types"."id" < "vehicle_refuels"."fuel_type_id"

Ref "vehicle_refuels_link_id_fkey":"links"."id" < "vehicle_refuels"."link_id"

Ref "vehicle_refuels_registered_by_entity_id_fkey":"entities"."id" < "vehicle_refuels"."registered_by_entity_id"

Ref "vehicle_refuels_station_fuel_id_fkey":"station_fuels"."id" < "vehicle_refuels"."station_fuel_id"

Ref "vehicle_refuels_station_id_fkey":"fuel_stations"."id" < "vehicle_refuels"."station_id"

Ref "vehicle_refuels_vehicle_id_fkey":"vehicles"."id" < "vehicle_refuels"."vehicle_id"

Ref "vehicles_brand_id_fkey":"brands"."id" < "vehicles"."brand_id"

Ref "vehicles_model_id_fkey":"models"."id" < "vehicles"."model_id"

Ref "vehicles_version_id_fkey":"model_versions"."id" < "vehicles"."version_id"
